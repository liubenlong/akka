akka {
  loglevel = "info"

  myUnboundedMailbox-dispatcher {
    mailbox-type = "com.lightbend.akka.mailbox.MyUnboundedMailbox"
  }

  prio-dispatcher {
    mailbox-type = "com.lightbend.akka.mailbox.MyPrioMailbox"
  }


  control-aware-dispatcher {
    mailbox-type = "akka.dispatch.UnboundedControlAwareMailbox"
    //Other dispatcher configuration goes here
  }

  my-thread-pool-dispatcher {
    # 基于事件的调度器的名称
    type = Dispatcher
    # 使用哪种类型的调度器
    executor = "thread-pool-executor"
    # 线程池调度器自定义配置
    thread-pool-executor {
            # Keep alive 时间
            keep-alive-time = 60s

            #其值可以为   off  或者 一个整数
            #定义线程池的大小，如果设置了此值，ThreadPoolExecutor 的corePoolSize 和maximumPoolSize 将会被该值填充
            #线程池的其他属性不会改变
            fixed-pool-size = off

            # 最小核心线程数
            core-pool-size-min = 8

            # 该参数用于定义ThreadPoolExecutor 的核心线程数corePoolSize ，
            # corePoolSize = ceil(处理器的数量（available processors） * core-pool-size-factor)
            # core-pool-size-factor的大小受core-pool-size-min与core-pool-size-max的限制
            core-pool-size-factor = 3.0

            # 最大核心线程数
            core-pool-size-max = 64

            # 指定可以使用哪种类型的任务队列，可以是数组或者队列，默认是队列
            task-queue-type = "linked"

            # 是否允许核心线程超时
            allow-core-timeout = on
          }
    # Throughput（吞吐量）该参数定义了，跳转到下一个actor以前，每一个actor要处理的消息的最大数量。
    # 设置为1可以保证公平（与线程的公平是一个意思）
    throughput = 100
  }
}

